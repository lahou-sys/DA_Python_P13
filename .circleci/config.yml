version: 2.1

workflows:
  pipeline:
    jobs:
      - build-test-lint
      - containerization:
          requires:
            - build-test-lint
          filters:
            branches:
              only: master

orbs:
  python: circleci/python@1.5.0

jobs:
  build-test-lint: 
    docker:
      - image: python:3.8-alpine
    steps:
      - checkout
      # - restore_cache:
      #     key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"
      - run:
          name: Running tests
          command: |
            . venv/bin/activate
            python3 manage.py test
      - run:
          name: Running linting
          command: |
            . venv/bin/activate
            flake8 --format=html --htmldir=flake-report
      - store_artifacts:
          path: flake-report/
          destination: flake-report
  containerization:
    docker:
      - image: python:3.8-alpine
    steps:
      - checkout
      - setup_remote_docker
      # Install Docker client
      - run:
          name: Install Docker client
          command: |
            apk add curl
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      # build and push Docker image.
      - run:
          name: Package app and push to DockerHub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker build -t $DOCKER_HUB_USER/oc_lettings:$CIRCLE_SHA1 .
            docker push $DOCKER_HUB_USER/oc_lettings:$CIRCLE_SHA1